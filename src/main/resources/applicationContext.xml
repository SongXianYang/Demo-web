<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!--扫描驱动配置-->
    <context:annotation-config/>
    <!--自动扫描所有注解路径-->
    <context:component-scan base-package="com.sshblog"/>

    <!--属性配置-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config.properties</value>
            </list>
        </property>
    </bean>

    <!--消息源配置-->
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource"
          p:basename="Message">
    </bean>

    <!--数据源配置-->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${jdbc.driverClassName}"
          p:url="${jdbc.url}"
          p:username="${jdbc.username}"
          p:password="${jdbc.password}">
    </bean>

    <!--SessionFactory配置-->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <!--以下是Hibernate的基础配置-->
                <!--是否自动更新表格-->
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <!--Hibernate方言配置-->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <!--是否显示SQL语句-->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <!--是否使用格式化SQL语句-->
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <!--在格式化的SQL语句的基础之上加强可读性-->
                <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
                <!--Hibernate缓存统计策略配置-->
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>

                <!--以下是Hibernate的c3p0配置-->
                <!-- 最大连接数 -->
                <prop key="hibernate.c3p0.max_size">${hibernate.c3p0.max_size}</prop>
                <!-- 最小连接数 -->
                <prop key="hibernate.c3p0.min_size">${hibernate.c3p0.min_size}</prop>
                <!-- 获得连接的超时时间,如果超过这个时间,会抛出异常，单位毫秒 -->
                <prop key="hibernate.c3p0.timeout">${hibernate.c3p0.timeout}</prop>
                <!-- 最大的PreparedStatement的数量 -->
                <prop key="hibernate.c3p0.max_statements">${hibernate.c3p0.max_statements}</prop>
                <!-- 每隔120秒检查连接池里的空闲连接 ，单位是秒-->
                <prop key="hibernate.c3p0.idle_test_period">${hibernate.c3p0.idle_test_period}</prop>
                <!-- 当连接池里面的连接用完的时候，C3P0一下获取的新的连接数 -->
                <prop key="hibernate.c3p0.acquire_increment">${hibernate.c3p0.acquire_increment}</prop>
                <!-- 每次都验证连接是否可用 -->
                <prop key="hibernate.c3p0.validate">${hibernate.c3p0.validate}</prop>
            </props>
        </property>
        <!--扫描的实体类路径配置-->
        <property name="packagesToScan" value="com.sshblog.entity"/>
    </bean>

    <!--Hibernate事务配置-->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory">
    </bean>

    <!--freemarker配置-->
    <bean id="freemarkerConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <!--端载入路径配置-->
        <property name="templateLoaderPath" value="/src/main/webapp/frontend/"/>
        <!--freemarker设置配置-->
        <property name="freemarkerSettings">
            <props>
                <prop key="classic_compatible">true</prop>
                <prop key="template_update_delay">0</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="number_format">0.##########</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="template_exception_handler">ignore</prop>
            </props>
        </property>
    </bean>

    <!--事务配置-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>